import 'package:cloud_firestore/cloud_firestore.dart';

class Health {
  final String id;
  final String title;
  final String note;
  final DateTime date;
  final String? time;

  // ‚úÖ ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Cat
  final String? catId;
  final String? catName;

  Health({
    this.id = "", // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏õ‡πá‡∏ô "" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á null error
    required this.title,
    required this.note,
    required this.date,
    this.time,
    this.catId,
    this.catName,
  });

  // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Firestore Map (‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á DB)
  Map<String, dynamic> toMap() {
    return {
      'id': id, // üî• ‡πÄ‡∏Å‡πá‡∏ö id ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏™‡∏°‡∏≠
      'title': title,
      'note': note,
      'date': Timestamp.fromDate(date), // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô Firestore Timestamp
      'time': time ?? '',
      'catId': catId ?? '',
      'catName': catName ?? '',
    };
  }

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore Map (‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å DB)
  factory Health.fromMap(Map<String, dynamic> map, String docId) {
    return Health(
      id: (map['id'] ?? "").toString().isNotEmpty ? map['id'] : docId,
      title: map['title'] ?? '',
      note: map['note'] ?? '',
      date: map['date'] is Timestamp
          ? (map['date'] as Timestamp).toDate()
          : DateTime.tryParse(map['date'] ?? '') ?? DateTime.now(),
      time: map['time'] ?? '',
      catId: map['catId'] ?? '',
      catName: map['catName'] ?? '',
    );
  }
}
